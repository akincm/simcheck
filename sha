#!/usr/bin/python
import os, sys

import hashlib

data = dict()
similar_files = dict()
def hash_file(filename):
   """"This function returns the SHA-1 hash
   of the file passed into it"""

   # make a hash object
   h = hashlib.sha1()

   # open file for reading in binary mode
   with open(filename,'rb') as file:

       # loop till the end of the file
       chunk = 0
       while chunk != b'':
           # read only 1024 bytes at a time
           chunk = file.read(1024)
           h.update(chunk)

   # return the hex representation of digest
   return h.hexdigest()

def iterator(root="null"):
    """Returns a dictionary with a key value pair of filename and filehash from a single directory 
                TODO: Add support for multi dirs
    """
    if root == "null":
        root = "/home/" + os.getlogin() + "/"
    for i in os.listdir(root):
        try:
            hash = hash_file(root + i)
            #print(i + " : " + hash)
            data[i] = hash
        except IsADirectoryError:
            print("The following is a directory: " + root + i)

def compare_sha():
    """ Compares the sha of two files in a dictionary."""
    for k in data:
        similar = 0
        for kk in data:
            if data[kk] == data[k]:
                similar += 1
                if similar >= 2:
                   print(k + " Is similar to " + kk)
iterator()
compare_sha()
